apply(df, 2, myFunction)
result <- apply(df, 2, myFunction)
result
class(result)
as.data.frame(result)
result <- as.data.frame(result)
result
str(result)
result[,c(3,4)] <- as.numeric(result(,c(3,4)))
result <- as.data.frame(result)
result[,c(3,4)] <- as.numeric(result(,c(3,4)))
result[,c(3,4)] <- as.numeric(result(,c(3,4)))
result
result[,c(3,4)] <- as.numeric(result[,c(3,4)])
class(result)
result[,c(3,4)]
result[,c(3,4)]
as.numeric(result[,c(3,4)])
result[,c(3,4)] <- as.numeric(as.character(result[,c(3,4)]))
result[,c(3,4)] <- as.numeric(as.character(result[,c(3,4)]))
result
result <- as.data.frame(result)
class(result)
as.numeric(as.character(result[,c(3,4)]))
as.numeric(unlist(result[,c(3,4)]))
result[,3]
result <- as.data.frame(result)
result
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
result <- as.data.frame(result)
as.numeric(result[,3])
as.numeric(result[,c(3,4)])
result[,c(3,4)]
as.numeric(unlist(result[,c(3,4)]))
as.numeric(result[,c(3,4)])
result[,c(3,4)]
do.call("as.numeric", result[,c(3,4)])
result[,c(3,4)]
result <- as.data.frame(result)
class(result)
result
myFunction <- function(element){
if(is.factor(element)){
return(tolower(element))
} else if(is.numeric(element)){
return(sqrt(element))
}
}
result <- lapply(df, myFunction)
result
result <- as.data.frame(do.call("cbind", result))
result
str(result)
result <- lapply(df, myFunction)
do.call("cbind", result)
do.call("cbind", as.data.frame(result))
do.call("cbind", as.data.frame(result))
as.data.frame(result)
str(as.data.frame(result))
result <- as.data.frame(result)
result
str(result)
class(result)
result <- apply(df, 2, myFunction)
result
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
myFunction <- function(element){
if(is.character(element)){
return(tolower(element))
} else if(is.numeric(element)){
return(sqrt(element))
}
}
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
class(result)
result <- as.data.frame(result)
class(result)
str(result)
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
class(result)
result <- as.data.frame(result)
class(result)
str(result)
result[,3] <- as.numeric(result[,3])
result[,4] <- as.numeric(result[,4])
str(result)
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
```
class(result)
result <- as.data.frame(result)
class(result)
myFunction <- function(element){
if(is.character(element)){
return(tolower(element))
} else if(is.numeric(element)){
return(sqrt(element))
}
}
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
str(result)
myFunction <- function(element){
if(is.factor(element)){
return(tolower(element))
} else if(is.numeric(element)){
return(sqrt(element))
}
}
result <- lapply(df, myFunction)
result
result <- as.data.frame(result)
result
str(result)
myFunction <- function(element){
if(is.character(element)){
return(tolower(element))
} else if(is.numeric(element)){
# return(sqrt(element))
return(df$Cat1)
}
}
myFunction <- function(element){
if(is.character(element)){
return(tolower(element))
} else if(is.numeric(element)){
# return(sqrt(element))
return(df$Cat1)
}
}
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
myFunction <- function(element){
if(is.character(element)){
#return(tolower(element))
return(df$Cat1)
} else if(is.numeric(element)){
return(sqrt(element))
}
}
a <- c("A", "B", "C", "A", "B", "A", "A")
b <- c("X", "X", "X", "X", "Y", "Y", "Y")
c <- c(1, 2, 3, 4, 5, 6, 7)
d <- c(10, 20, 30, 40, 50, 60, 70)
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
result <- apply(df, 2, myFunction)
result
result <- lapply(df, function(x){
if(is.factor(x)){
return(tolower(x))
} else if(is.numeric(x)){
return(sqrt(x))
}
})
result <- as.data.frame(result)
str(result)
result <- lapply(df, function(x){
if(is.factor(x)){
return(tolower(x))
} else if(is.numeric(x)){
comp_result <- sqrt(x) * df$Cat2
return(comp_result)
}
})
result <- as.data.frame(result)
str(result)
x <- 1
if(is.factor(x)){
x <- df[,3]
comp_result <- sqrt(x) * df$Cat2
df <- data.frame(Cat1 = a, Cat2 = b, Val1 = c, Val2 = d)
comp_result <- sqrt(x) * df$Cat2
class(x)
result <- lapply(df, function(x){
if(is.factor(x)){
return(tolower(x))
} else if(is.numeric(x)){
comp_result <- sqrt(x) * df$Val2
return(comp_result)
}
})
result <- as.data.frame(result)
str(result)
df
sqrt(10)
result
df
df
result <- lapply(df, function(x){
if(is.factor(x)){
return(tolower(x))
} else if(is.numeric(x)){
df <- sqrt(x) * df$Val2
return(df)
}
})
result <- as.data.frame(result)
result
df
test <- 1
df
test <- 1
result <- lapply(df, function(x){
if(is.factor(x)){
test <- tolower(x)
return(test)
} else if(is.numeric(x)){
df <- sqrt(x) * df$Val2
return(df)
}
})
result <- as.data.frame(result)
result
df
test
test <- 1
result <- lapply(df, function(x){
if(is.factor(x)){
test <- tolower(x)
return(test)
} else if(is.numeric(x)){
df <- sqrt(x) * df$Val2
return(df)
}
})
result <- as.data.frame(result)
result
df
test
df
nrows(df)
nrow(df)
result <- lapply(nrow(df), function(x){
print(x)
})
result <- lapply(seq(nrow(df)), function(x){
new_structure <- data.frame(Col1 = paste(df[x,1], df[x,2]),
Col2 = df[x,3] * df[x,4])
return(new_structure)
})
result
str(result)
result <- do.call("cbind", result)
str(result)
result
result <- lapply(seq(nrow(df)), function(x){
new_structure <- data.frame(Col1 = paste(df[x,1], df[x,2]),
Col2 = df[x,3] * df[x,4])
return(new_structure)
})
str(result)
result <- do.call("rbind", result)
str(result)
for(elements in a){
print(elements)
}
for(elements in a){
tolower(elements)
}
tolower(elements)
for(elements in a){
tolower(elements)
}
for(elements in a){
test <- tolower(elements)
}
test
test <- c()
test <- c()
for(elements in a){
test <- test + test(tolower(elements))
}
test
test <- c()
for(elements in a){
test <- c(test tolower(elements))
}
test
test <- c()
for(elements in a){
test <- c(test, tolower(elements))
}
test
test <- character(length(a))   # this is an empty character vector
test
test <- character(length(a))   # this is an empty character vector of length a
for(i in seq(length(a)){
test[i] <- tolower(a[i]))
}
test
test[i]
test <- character(length(a))   # this is an empty character vector of length a
i <- 1
tolower(a[i]))
tolower(a[i])
test <- character(length(a))   # this is an empty character vector of length a
for(i in seq(length(a)){
test[i] <- tolower(a[i])
}
test
for(i in seq(length(a))){
test[i] <- tolower(a[i])
}
test
a
for(i in seq(length(a))){
a[i] <- paste0(a[i], "x")
}
a
simpleFunction <- function(){
print("I am a simple function")
}
simpleFunction()
?rowSums
?+
?*
?add
?addition
simpleFunction <- function(){
print("I am a simple function which prints the content of a variable:")
print(test)
}
test <- "Content of variable test"
simpleFunction()
test <- "Content of variable test"
simpleFunction <- function(content){
print("I am a simple function which prints the content of a variable:")
print(content)
}
test <- "Content of variable test"
simpleFunction(test)
conversion <- function(element){
if(is.character(element)){
return(tolower(element))
}    else if(is.numeric(element)){
return(sqrt(element))
}
}
result <- conversion(a)
result
conversion <- function(element){
if(is.character(element)){
return(tolower(element))
}    else if(is.numeric(element)){
return(sqrt(element))
}
}
a <- c("A", "B", "C", "A", "B", "A", "A")
result <- conversion(a)
result
result <- conversion(b)
result
result <- conversion(c)
result
t <- simpleFunction(test)
t
return_variable <- simpleFunction(test)
return_variable
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(temp)
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(temp)
return(temp)
}
}
result <- conversion(a)
result
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(paste0("This is the result: ", temp))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(paste0("This is the result: ", temp))
return(temp)
}
}
result <- conversion(a)
result
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(paste0("Element ", element, " is converted to " temp))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(paste0("Element ", element, " is converted to " temp))
return(temp)
}
}
result <- conversion(a)
result
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(paste0("Element ", element, " is converted to " temp))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(paste0("Element ", element, " is converted to " temp))
return(temp)
}
}
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(paste0("Element ", element, " is converted to ", temp))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(paste0("Element ", element, " is converted to ", temp))
return(temp)
}
}
result <- conversion(a)
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(paste0("Element ", element, " is converted to ", temp, "\n"))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(paste0("Element ", element, " is converted to ", temp))
return(temp)
}
}
result <- conversion(a)
result
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
writeLines(paste0("Element ", element, " is converted to ", temp, "\n"))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
writeLines(paste0("Element ", element, " is converted to ", temp))
return(temp)
}
}
result <- conversion(a)
result
conversion <- function(element){
if(is.character(element)){
temp <- tolower(element)
print(paste0("Element ", element, " is converted to ", temp, "\n"))
return(temp)
}    else if(is.numeric(element)){
temp <- sqrt(element)
print(paste0("Element ", element, " is converted to ", temp))
return(temp)
}
}
result <- conversion(a)
result
willNotChange <- function(variable){
variable <- variable + 5
return(variable)
}
willNotChangeAnOutsideVariableCalledVariable <- function(variable){
variable <- variable + 5
return(variable)
}
variable <- c(1,2,3,4,5)
willNotChangeAnOutsideVariableCalledVariable(variable)
variable
willNotChangeAnOutsideVariableCalledVariable <- function(){
variable <- variable + 5
return(variable)
}
variable <- c(1,2,3,4,5)
willNotChangeAnOutsideVariableCalledVariable(variable)
willNotChangeAnOutsideVariableCalledVariable()
variable
